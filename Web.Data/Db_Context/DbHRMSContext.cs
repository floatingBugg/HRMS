// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;
using Web.Data.Models;

#nullable disable

namespace Web.Data.Db_Context
{
    public partial class DbHRMSContext : DbContext
    {
        public DbHRMSContext()
        {
        }

        public DbHRMSContext(DbContextOptions<DbHRMSContext> options)
            : base(options)
        {
        }

        public virtual DbSet<EmsTblAcademicQualification> EmsTblAcademicQualification { get; set; }
        public virtual DbSet<EmsTblEmergencyContact> EmsTblEmergencyContact { get; set; }
        public virtual DbSet<EmsTblEmployeeDetails> EmsTblEmployeeDetails { get; set; }
        public virtual DbSet<EmsTblEmployeeProfessionalDetails> EmsTblEmployeeProfessionalDetails { get; set; }
        public virtual DbSet<EmsTblHrmsUser> EmsTblHrmsUser { get; set; }
        public virtual DbSet<EmsTblProfessionalQualification> EmsTblProfessionalQualification { get; set; }
        public virtual DbSet<EmsTblWorkingHistory> EmsTblWorkingHistory { get; set; }
        public virtual DbSet<ImsAc> ImsAc { get; set; }
        public virtual DbSet<ImsAssets> ImsAssets { get; set; }
        public virtual DbSet<ImsCctvCameras> ImsCctvCameras { get; set; }
        public virtual DbSet<ImsDrives> ImsDrives { get; set; }
        public virtual DbSet<ImsFans> ImsFans { get; set; }
        public virtual DbSet<ImsFurniture> ImsFurniture { get; set; }
        public virtual DbSet<ImsKeyboard> ImsKeyboard { get; set; }
        public virtual DbSet<ImsLaptop> ImsLaptop { get; set; }
        public virtual DbSet<ImsMouse> ImsMouse { get; set; }
        public virtual DbSet<ImsPowerCable> ImsPowerCable { get; set; }
        public virtual DbSet<ImsPrinters> ImsPrinters { get; set; }
        public virtual DbSet<ImsScreens> ImsScreens { get; set; }
        public virtual DbSet<ImsStationery> ImsStationery { get; set; }

        protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
        {
            if (!optionsBuilder.IsConfigured)
            {
#warning To protect potentially sensitive information in your connection string, you should move it out of source code. You can avoid scaffolding the connection string by using the Name= syntax to read it from configuration - see https://go.microsoft.com/fwlink/?linkid=2131148. For more guidance on storing connection strings, see http://go.microsoft.com/fwlink/?LinkId=723263.
                optionsBuilder.UseSqlServer("Data Source=SQL5105.site4now.net;Initial Catalog=db_a7d47e_hrms;Persist Security Info=True;User ID=db_a7d47e_hrms_admin;Password=123hamza");
            }
        }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.HasAnnotation("Relational:Collation", "SQL_Latin1_General_CP1_CI_AS");

            modelBuilder.Entity<EmsTblAcademicQualification>(entity =>
            {
                entity.HasKey(e => e.EtaqAqId)
                    .HasName("PK__ems_tbl___128BDF78D5779BCF");

                entity.ToTable("ems_tbl_academic_qualification");

                entity.Property(e => e.EtaqAqId).HasColumnName("etaq_aq_id");

                entity.Property(e => e.EtaqCgpa).HasColumnName("etaq_cgpa");

                entity.Property(e => e.EtaqCreatedBy).HasColumnName("etaq_created_by");

                entity.Property(e => e.EtaqCreatedByDate)
                    .HasColumnType("datetime")
                    .HasColumnName("etaq_created_by_date");

                entity.Property(e => e.EtaqCreatedByName).HasColumnName("etaq_created_by_name");

                entity.Property(e => e.EtaqEtedEmployeeId).HasColumnName("etaq_eted_employee_id");

                entity.Property(e => e.EtaqInstituteName).HasColumnName("etaq_institute_name");

                entity.Property(e => e.EtaqIsDelete)
                    .HasColumnName("etaq_is_delete")
                    .HasDefaultValueSql("('false')");

                entity.Property(e => e.EtaqModifiedBy).HasColumnName("etaq_modified_by");

                entity.Property(e => e.EtaqModifiedByDate)
                    .HasColumnType("datetime")
                    .HasColumnName("etaq_modified_by_date");

                entity.Property(e => e.EtaqModifiedByName).HasColumnName("etaq_modified_by_name");

                entity.Property(e => e.EtaqPassingYear).HasColumnName("etaq_passing_year");

                entity.Property(e => e.EtaqQualification).HasColumnName("etaq_qualification");

                entity.Property(e => e.EtaqUploadDocuments).HasColumnName("etaq_upload_documents");

                entity.HasOne(d => d.EtaqEtedEmployee)
                    .WithMany(p => p.EmsTblAcademicQualification)
                    .HasForeignKey(d => d.EtaqEtedEmployeeId)
                    .HasConstraintName("FK__ems_tbl_a__etaq___2DE6D218");
            });

            modelBuilder.Entity<EmsTblEmergencyContact>(entity =>
            {
                entity.HasKey(e => e.EtecEcId)
                    .HasName("PK__ems_tbl___BBD724E953E48F71");

                entity.ToTable("ems_tbl_emergency_contact");

                entity.Property(e => e.EtecEcId).HasColumnName("etec_ec_id");

                entity.Property(e => e.EtecAddress).HasColumnName("etec_address");

                entity.Property(e => e.EtecContactNumber).HasColumnName("etec_contact_number");

                entity.Property(e => e.EtecCreatedBy).HasColumnName("etec_created_by");

                entity.Property(e => e.EtecCreatedByDate)
                    .HasColumnType("datetime")
                    .HasColumnName("etec_created_by_date");

                entity.Property(e => e.EtecCreatedByName).HasColumnName("etec_created_by_name");

                entity.Property(e => e.EtecEtedEmployeeId).HasColumnName("etec_eted_employee_id");

                entity.Property(e => e.EtecFirstName).HasColumnName("etec_first_name");

                entity.Property(e => e.EtecIsDelete)
                    .HasColumnName("etec_is_delete")
                    .HasDefaultValueSql("('false')");

                entity.Property(e => e.EtecLastName).HasColumnName("etec_last_name");

                entity.Property(e => e.EtecModifiedBy).HasColumnName("etec_modified_by");

                entity.Property(e => e.EtecModifiedByDate)
                    .HasColumnType("datetime")
                    .HasColumnName("etec_modified_by_date");

                entity.Property(e => e.EtecModifiedByName).HasColumnName("etec_modified_by_name");

                entity.Property(e => e.EtecRelation).HasColumnName("etec_relation");

                entity.HasOne(d => d.EtecEtedEmployee)
                    .WithMany(p => p.EmsTblEmergencyContact)
                    .HasForeignKey(d => d.EtecEtedEmployeeId)
                    .HasConstraintName("FK__ems_tbl_e__etec___2EDAF651");
            });

            modelBuilder.Entity<EmsTblEmployeeDetails>(entity =>
            {
                entity.HasKey(e => e.EtedEmployeeId)
                    .HasName("PK__ems_tbl___516C46CDF5E224DC");

                entity.ToTable("ems_tbl_employee_details");

                entity.Property(e => e.EtedEmployeeId).HasColumnName("eted_employee_id");

                entity.Property(e => e.EtedAddress)
                    .HasMaxLength(50)
                    .HasColumnName("eted_address");

                entity.Property(e => e.EtedBloodGroup)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("eted_blood_group");

                entity.Property(e => e.EtedCnic).HasColumnName("eted_cnic");

                entity.Property(e => e.EtedContactNumber)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("eted_contact_number");

                entity.Property(e => e.EtedCreatedBy).HasColumnName("eted_created_by");

                entity.Property(e => e.EtedCreatedByDate)
                    .HasColumnType("datetime")
                    .HasColumnName("eted_created_by_date");

                entity.Property(e => e.EtedCreatedByName).HasColumnName("eted_created_by_name");

                entity.Property(e => e.EtedDob)
                    .HasColumnType("datetime")
                    .HasColumnName("eted_dob");

                entity.Property(e => e.EtedEmailAddress)
                    .HasMaxLength(50)
                    .HasColumnName("eted_email_address");

                entity.Property(e => e.EtedFirstName)
                    .HasMaxLength(50)
                    .HasColumnName("eted_first_name");

                entity.Property(e => e.EtedGender)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("eted_gender");

                entity.Property(e => e.EtedIsDelete)
                    .HasColumnName("eted_is_delete")
                    .HasDefaultValueSql("('false')");

                entity.Property(e => e.EtedLastName)
                    .HasMaxLength(50)
                    .HasColumnName("eted_last_name");

                entity.Property(e => e.EtedMaritalStatus)
                    .HasMaxLength(50)
                    .IsUnicode(false)
                    .HasColumnName("eted_marital_status");

                entity.Property(e => e.EtedModifiedBy).HasColumnName("eted_modified_by");

                entity.Property(e => e.EtedModifiedByDate)
                    .HasColumnType("datetime")
                    .HasColumnName("eted_modified_by_date");

                entity.Property(e => e.EtedModifiedByName).HasColumnName("eted_modified_by_name");

                entity.Property(e => e.EtedNationality).HasColumnName("eted_nationality");

                entity.Property(e => e.EtedOfficialEmailAddress).HasColumnName("eted_official_email_address");

                entity.Property(e => e.EtedPhotograph).HasColumnName("eted_photograph");

                entity.Property(e => e.EtedReligion).HasColumnName("eted_religion");

                entity.Property(e => e.EtedStatus).HasColumnName("eted_status");
            });

            modelBuilder.Entity<EmsTblEmployeeProfessionalDetails>(entity =>
            {
                entity.HasKey(e => e.EtepdPdId)
                    .HasName("PK__ems_tbl___DBCDA814B7C6BA80");

                entity.ToTable("ems_tbl_employee_professional_details");

                entity.Property(e => e.EtepdPdId).HasColumnName("etepd_pd_id");

                entity.Property(e => e.EtepdCreatedBy).HasColumnName("etepd_created_by");

                entity.Property(e => e.EtepdCreatedByDate)
                    .HasColumnType("datetime")
                    .HasColumnName("etepd_created_by_date");

                entity.Property(e => e.EtepdCreatedByName).HasColumnName("etepd_created_by_name");

                entity.Property(e => e.EtepdDesignation).HasColumnName("etepd_designation");

                entity.Property(e => e.EtepdEtedEmployeeId).HasColumnName("etepd_eted_employee_id");

                entity.Property(e => e.EtepdIsDelete)
                    .HasColumnName("etepd_is_delete")
                    .HasDefaultValueSql("('false')");

                entity.Property(e => e.EtepdJoiningDate)
                    .HasColumnType("datetime")
                    .HasColumnName("etepd_joining_date");

                entity.Property(e => e.EtepdModifiedBy).HasColumnName("etepd_modified_by");

                entity.Property(e => e.EtepdModifiedByDate)
                    .HasColumnType("datetime")
                    .HasColumnName("etepd_modified_by_date");

                entity.Property(e => e.EtepdModifiedByName).HasColumnName("etepd_modified_by_name");

                entity.Property(e => e.EtepdProbation).HasColumnName("etepd_probation");

                entity.Property(e => e.EtepdSalary).HasColumnName("etepd_salary");

                entity.HasOne(d => d.EtepdEtedEmployee)
                    .WithMany(p => p.EmsTblEmployeeProfessionalDetails)
                    .HasForeignKey(d => d.EtepdEtedEmployeeId)
                    .HasConstraintName("FK__ems_tbl_e__etepd__2FCF1A8A");
            });

            modelBuilder.Entity<EmsTblHrmsUser>(entity =>
            {
                entity.HasKey(e => e.EthuUserId)
                    .HasName("PK__ems_tbl___7F2D16AC75DE39F2");

                entity.ToTable("ems_tbl_hrms_user");

                entity.Property(e => e.EthuUserId).HasColumnName("ethu_user_id");

                entity.Property(e => e.EthuCreatedBy).HasColumnName("ethu_created_by");

                entity.Property(e => e.EthuCreatedByDate)
                    .HasColumnType("datetime")
                    .HasColumnName("ethu_created_by_date");

                entity.Property(e => e.EthuCreatedByName).HasColumnName("ethu_created_by_name");

                entity.Property(e => e.EthuEmailAddress).HasColumnName("ethu_email_address");

                entity.Property(e => e.EthuFullName).HasColumnName("ethu_full_name");

                entity.Property(e => e.EthuGender).HasColumnName("ethu_gender");

                entity.Property(e => e.EthuIsDelete)
                    .HasColumnName("ethu_is_delete")
                    .HasDefaultValueSql("('false')");

                entity.Property(e => e.EthuModifiedBy).HasColumnName("ethu_modified_by");

                entity.Property(e => e.EthuModifiedByDate)
                    .HasColumnType("datetime")
                    .HasColumnName("ethu_modified_by_date");

                entity.Property(e => e.EthuModifiedByName).HasColumnName("ethu_modified_by_name");

                entity.Property(e => e.EthuPassword).HasColumnName("ethu_password");

                entity.Property(e => e.EthuPhoneNumber).HasColumnName("ethu_phone_number");

                entity.Property(e => e.EthuUserName).HasColumnName("ethu_user_name");
            });

            modelBuilder.Entity<EmsTblProfessionalQualification>(entity =>
            {
                entity.HasKey(e => e.EtpqPqId)
                    .HasName("PK__ems_tbl___E07F4F72941A86C1");

                entity.ToTable("ems_tbl_professional_qualification");

                entity.Property(e => e.EtpqPqId).HasColumnName("etpq_pq_id");

                entity.Property(e => e.EtpqCertification).HasColumnName("etpq_certification");

                entity.Property(e => e.EtpqCreatedBy).HasColumnName("etpq_created_by");

                entity.Property(e => e.EtpqCreatedByDate)
                    .HasColumnType("datetime")
                    .HasColumnName("etpq_created_by_date");

                entity.Property(e => e.EtpqCreatedByName).HasColumnName("etpq_created_by_name");

                entity.Property(e => e.EtpqDocuments).HasColumnName("etpq_documents");

                entity.Property(e => e.EtpqEndDate)
                    .HasColumnType("datetime")
                    .HasColumnName("etpq_end_date");

                entity.Property(e => e.EtpqEtedEmployeeId).HasColumnName("etpq_eted_employee_id");

                entity.Property(e => e.EtpqInstituteName).HasColumnName("etpq_institute_name");

                entity.Property(e => e.EtpqIsDelete)
                    .HasColumnName("etpq_is_delete")
                    .HasDefaultValueSql("('false')");

                entity.Property(e => e.EtpqModifiedBy).HasColumnName("etpq_modified_by");

                entity.Property(e => e.EtpqModifiedByDate)
                    .HasColumnType("datetime")
                    .HasColumnName("etpq_modified_by_date");

                entity.Property(e => e.EtpqModifiedByName).HasColumnName("etpq_modified_by_name");

                entity.Property(e => e.EtpqStratDate)
                    .HasColumnType("datetime")
                    .HasColumnName("etpq_strat_date");

                entity.HasOne(d => d.EtpqEtedEmployee)
                    .WithMany(p => p.EmsTblProfessionalQualification)
                    .HasForeignKey(d => d.EtpqEtedEmployeeId)
                    .HasConstraintName("FK__ems_tbl_p__etpq___30C33EC3");
            });

            modelBuilder.Entity<EmsTblWorkingHistory>(entity =>
            {
                entity.HasKey(e => e.EtwhWhId)
                    .HasName("PK__ems_tbl___EE14BDFF5C21C3CE");

                entity.ToTable("ems_tbl_working_history");

                entity.Property(e => e.EtwhWhId).HasColumnName("etwh_wh_id");

                entity.Property(e => e.EtwhCompanyName).HasColumnName("etwh_company_name");

                entity.Property(e => e.EtwhCreatedBy).HasColumnName("etwh_created_by");

                entity.Property(e => e.EtwhCreatedByDate)
                    .HasColumnType("datetime")
                    .HasColumnName("etwh_created_by_date");

                entity.Property(e => e.EtwhCreatedByName).HasColumnName("etwh_created_by_name");

                entity.Property(e => e.EtwhDesignation).HasColumnName("etwh_designation");

                entity.Property(e => e.EtwhDuration).HasColumnName("etwh_duration");

                entity.Property(e => e.EtwhEndDate)
                    .HasColumnType("datetime")
                    .HasColumnName("etwh_end_date");

                entity.Property(e => e.EtwhEtedEmployeeId).HasColumnName("etwh_eted_employee_id");

                entity.Property(e => e.EtwhExperienceLetter).HasColumnName("etwh_experience_letter");

                entity.Property(e => e.EtwhIsDelete)
                    .HasColumnName("etwh_is_delete")
                    .HasDefaultValueSql("('false')");

                entity.Property(e => e.EtwhModifiedBy).HasColumnName("etwh_modified_by");

                entity.Property(e => e.EtwhModifiedByDate)
                    .HasColumnType("datetime")
                    .HasColumnName("etwh_modified_by_date");

                entity.Property(e => e.EtwhModifiedByName).HasColumnName("etwh_modified_by_name");

                entity.Property(e => e.EtwhStratDate)
                    .HasColumnType("datetime")
                    .HasColumnName("etwh_strat_date");

                entity.HasOne(d => d.EtwhEtedEmployee)
                    .WithMany(p => p.EmsTblWorkingHistory)
                    .HasForeignKey(d => d.EtwhEtedEmployeeId)
                    .HasConstraintName("FK__ems_tbl_w__etwh___31B762FC");
            });

            modelBuilder.Entity<ImsAc>(entity =>
            {
                entity.HasKey(e => e.ItaAcId)
                    .HasName("PK__ims_ac__FB0A9A7DFE4001B1");

                entity.ToTable("ims_ac");

                entity.Property(e => e.ItaAcId).HasColumnName("ita_ac_id");

                entity.Property(e => e.ItaAssetId).HasColumnName("ita_asset_id");

                entity.Property(e => e.ItaCompanyName).HasColumnName("ita_company_name");

                entity.Property(e => e.ItaCreatedBy).HasColumnName("ita_created_by");

                entity.Property(e => e.ItaCreatedByDate)
                    .HasColumnType("datetime")
                    .HasColumnName("ita_created_by_date")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.ItaCreatedByName).HasColumnName("ita_created_by_name");

                entity.Property(e => e.ItaIsDelete).HasColumnName("ita_is_delete");

                entity.Property(e => e.ItaModifiedBy).HasColumnName("ita_modified_by");

                entity.Property(e => e.ItaModifiedByDate)
                    .HasColumnType("datetime")
                    .HasColumnName("ita_modified_by_date")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.ItaModifiedByName).HasColumnName("ita_modified_by_name");

                entity.Property(e => e.ItaSize).HasColumnName("ita_size");

                entity.HasOne(d => d.ItaAsset)
                    .WithMany(p => p.ImsAc)
                    .HasForeignKey(d => d.ItaAssetId)
                    .HasConstraintName("FK__ims_ac__ita_asse__0D44F85C");
            });

            modelBuilder.Entity<ImsAssets>(entity =>
            {
                entity.HasKey(e => e.ItaAssetId)
                    .HasName("PK__ims_asse__B51DD0C3A38A65C3");

                entity.ToTable("ims_assets");

                entity.Property(e => e.ItaAssetId).HasColumnName("ita_asset_id");

                entity.Property(e => e.ItaAssetName)
                    .IsRequired()
                    .HasColumnName("ita_asset_name");

                entity.Property(e => e.ItaAssignedTo).HasColumnName("ita_assigned_to");

                entity.Property(e => e.ItaCost).HasColumnName("ita_cost");

                entity.Property(e => e.ItaCreatedBy).HasColumnName("ita_created_by");

                entity.Property(e => e.ItaCreatedByDate)
                    .HasColumnType("datetime")
                    .HasColumnName("ita_created_by_date")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.ItaCreatedByName).HasColumnName("ita_created_by_name");

                entity.Property(e => e.ItaIsDelete).HasColumnName("ita_is_delete");

                entity.Property(e => e.ItaModifiedBy).HasColumnName("ita_modified_by");

                entity.Property(e => e.ItaModifiedByDate)
                    .HasColumnType("datetime")
                    .HasColumnName("ita_modified_by_date")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.ItaModifiedByName).HasColumnName("ita_modified_by_name");

                entity.Property(e => e.ItaPurchaseDate)
                    .HasColumnType("date")
                    .HasColumnName("ita_purchase_date");

                entity.Property(e => e.ItaQuantity).HasColumnName("ita_quantity");
            });

            modelBuilder.Entity<ImsCctvCameras>(entity =>
            {
                entity.HasKey(e => e.ItccCctvId)
                    .HasName("PK__ims_cctv__C48F7A6FAD4870EF");

                entity.ToTable("ims_cctv_cameras");

                entity.Property(e => e.ItccCctvId).HasColumnName("itcc_cctv_id");

                entity.Property(e => e.ItaAssetId).HasColumnName("ita_asset_id");

                entity.Property(e => e.ItccCreatedBy).HasColumnName("itcc_created_by");

                entity.Property(e => e.ItccCreatedByDate)
                    .HasColumnType("datetime")
                    .HasColumnName("itcc_created_by_date")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.ItccCreatedByName).HasColumnName("itcc_created_by_name");

                entity.Property(e => e.ItccIsDelete).HasColumnName("itcc_is_delete");

                entity.Property(e => e.ItccModelNo).HasColumnName("itcc_model_no");

                entity.Property(e => e.ItccModifiedBy).HasColumnName("itcc_modified_by");

                entity.Property(e => e.ItccModifiedByDate)
                    .HasColumnType("datetime")
                    .HasColumnName("itcc_modified_by_date")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.ItccModifiedByName).HasColumnName("itcc_modified_by_name");

                entity.Property(e => e.ItccPixels).HasColumnName("itcc_pixels");

                entity.Property(e => e.ItccSerialNo).HasColumnName("itcc_serial_no");

                entity.HasOne(d => d.ItaAsset)
                    .WithMany(p => p.ImsCctvCameras)
                    .HasForeignKey(d => d.ItaAssetId)
                    .HasConstraintName("FK__ims_cctv___ita_a__1209AD79");
            });

            modelBuilder.Entity<ImsDrives>(entity =>
            {
                entity.HasKey(e => e.ItdDriveId)
                    .HasName("PK__ims_driv__FA3037AFA62BF0B6");

                entity.ToTable("ims_drives");

                entity.Property(e => e.ItdDriveId).HasColumnName("itd_drive_id");

                entity.Property(e => e.ItaAssetId).HasColumnName("ita_asset_id");

                entity.Property(e => e.ItdCapacity).HasColumnName("itd_capacity");

                entity.Property(e => e.ItdCreatedBy).HasColumnName("itd_created_by");

                entity.Property(e => e.ItdCreatedByDate)
                    .HasColumnType("datetime")
                    .HasColumnName("itd_created_by_date")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.ItdCreatedByName).HasColumnName("itd_created_by_name");

                entity.Property(e => e.ItdIsDelete).HasColumnName("itd_is_delete");

                entity.Property(e => e.ItdModifiedBy).HasColumnName("itd_modified_by");

                entity.Property(e => e.ItdModifiedByDate)
                    .HasColumnType("datetime")
                    .HasColumnName("itd_modified_by_date")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.ItdModifiedByName).HasColumnName("itd_modified_by_name");

                entity.Property(e => e.ItdType).HasColumnName("itd_type");

                entity.HasOne(d => d.ItaAsset)
                    .WithMany(p => p.ImsDrives)
                    .HasForeignKey(d => d.ItaAssetId)
                    .HasConstraintName("FK__ims_drive__ita_a__03BB8E22");
            });

            modelBuilder.Entity<ImsFans>(entity =>
            {
                entity.HasKey(e => e.ItfaFanId)
                    .HasName("PK__ims_fans__0140B3EF1F859770");

                entity.ToTable("ims_fans");

                entity.Property(e => e.ItfaFanId).HasColumnName("itfa_fan_id");

                entity.Property(e => e.ItaAssetId).HasColumnName("ita_asset_id");

                entity.Property(e => e.ItfaCreatedBy).HasColumnName("itfa_created_by");

                entity.Property(e => e.ItfaCreatedByDate)
                    .HasColumnType("datetime")
                    .HasColumnName("itfa_created_by_date")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.ItfaCreatedByName).HasColumnName("itfa_created_by_name");

                entity.Property(e => e.ItfaIsDelete).HasColumnName("itfa_is_delete");

                entity.Property(e => e.ItfaModelNo).HasColumnName("itfa_model_no");

                entity.Property(e => e.ItfaModifiedBy).HasColumnName("itfa_modified_by");

                entity.Property(e => e.ItfaModifiedByDate)
                    .HasColumnType("datetime")
                    .HasColumnName("itfa_modified_by_date")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.ItfaModifiedByName).HasColumnName("itfa_modified_by_name");

                entity.Property(e => e.ItfaSerialNo).HasColumnName("itfa_serial_no");

                entity.Property(e => e.ItfaType).HasColumnName("itfa_type");

                entity.HasOne(d => d.ItaAsset)
                    .WithMany(p => p.ImsFans)
                    .HasForeignKey(d => d.ItaAssetId)
                    .HasConstraintName("FK__ims_fans__ita_as__16CE6296");
            });

            modelBuilder.Entity<ImsFurniture>(entity =>
            {
                entity.HasKey(e => e.ItfFurnitureId)
                    .HasName("PK__ims_furn__E68EEF8881656E01");

                entity.ToTable("ims_furniture");

                entity.Property(e => e.ItfFurnitureId).HasColumnName("itf_furniture_id");

                entity.Property(e => e.ItaAssetId).HasColumnName("ita_asset_id");

                entity.Property(e => e.ItfCreatedBy).HasColumnName("itf_created_by");

                entity.Property(e => e.ItfCreatedByDate)
                    .HasColumnType("datetime")
                    .HasColumnName("itf_created_by_date")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.ItfCreatedByName).HasColumnName("itf_created_by_name");

                entity.Property(e => e.ItfIsDelete).HasColumnName("itf_is_delete");

                entity.Property(e => e.ItfModifiedBy).HasColumnName("itf_modified_by");

                entity.Property(e => e.ItfModifiedByDate)
                    .HasColumnType("datetime")
                    .HasColumnName("itf_modified_by_date")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.ItfModifiedByName).HasColumnName("itf_modified_by_name");

                entity.Property(e => e.ItfType).HasColumnName("itf_type");

                entity.HasOne(d => d.ItaAsset)
                    .WithMany(p => p.ImsFurniture)
                    .HasForeignKey(d => d.ItaAssetId)
                    .HasConstraintName("FK__ims_furni__ita_a__0880433F");
            });

            modelBuilder.Entity<ImsKeyboard>(entity =>
            {
                entity.HasKey(e => e.ItkKeyboardId)
                    .HasName("PK__ims_keyb__016604ED26AE090B");

                entity.ToTable("ims_keyboard");

                entity.Property(e => e.ItkKeyboardId).HasColumnName("itk_keyboard_id");

                entity.Property(e => e.ItaAssetId).HasColumnName("ita_asset_id");

                entity.Property(e => e.ItkCompanyName).HasColumnName("itk_company_name");

                entity.Property(e => e.ItkCreatedBy).HasColumnName("itk_created_by");

                entity.Property(e => e.ItkCreatedByDate)
                    .HasColumnType("datetime")
                    .HasColumnName("itk_created_by_date")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.ItkCreatedByName).HasColumnName("itk_created_by_name");

                entity.Property(e => e.ItkIsDelete).HasColumnName("itk_is_delete");

                entity.Property(e => e.ItkModelNo).HasColumnName("itk_model_no");

                entity.Property(e => e.ItkModifiedBy).HasColumnName("itk_modified_by");

                entity.Property(e => e.ItkModifiedByDate)
                    .HasColumnType("datetime")
                    .HasColumnName("itk_modified_by_date")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.ItkModifiedByName).HasColumnName("itk_modified_by_name");

                entity.HasOne(d => d.ItaAsset)
                    .WithMany(p => p.ImsKeyboard)
                    .HasForeignKey(d => d.ItaAssetId)
                    .HasConstraintName("FK__ims_keybo__ita_a__29E1370A");
            });

            modelBuilder.Entity<ImsLaptop>(entity =>
            {
                entity.HasKey(e => e.ItlLaptopId)
                    .HasName("PK__ims_lapt__D9F5296D6DE70C18");

                entity.ToTable("ims_laptop");

                entity.Property(e => e.ItlLaptopId).HasColumnName("itl_laptop_id");

                entity.Property(e => e.IltCreatedByDate)
                    .HasColumnType("datetime")
                    .HasColumnName("ilt_created_by_date")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.ItaAssetId).HasColumnName("ita_asset_id");

                entity.Property(e => e.ItlCompanyName).HasColumnName("itl_company_name");

                entity.Property(e => e.ItlCreatedBy).HasColumnName("itl_created_by");

                entity.Property(e => e.ItlCreatedByName).HasColumnName("itl_created_by_name");

                entity.Property(e => e.ItlGeneration).HasColumnName("itl_generation");

                entity.Property(e => e.ItlHdd).HasColumnName("itl_hdd");

                entity.Property(e => e.ItlIsDelete).HasColumnName("itl_is_delete");

                entity.Property(e => e.ItlModifiedBy).HasColumnName("itl_modified_by");

                entity.Property(e => e.ItlModifiedByDate)
                    .HasColumnType("datetime")
                    .HasColumnName("itl_modified_by_date")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.ItlModifiedByName).HasColumnName("itl_modified_by_name");

                entity.Property(e => e.ItlProcessor).HasColumnName("itl_processor");

                entity.Property(e => e.ItlRam).HasColumnName("itl_ram");

                entity.Property(e => e.ItlSerialNo).HasColumnName("itl_serial_no");

                entity.HasOne(d => d.ItaAsset)
                    .WithMany(p => p.ImsLaptop)
                    .HasForeignKey(d => d.ItaAssetId)
                    .HasConstraintName("FK__ims_lapto__ita_a__251C81ED");
            });

            modelBuilder.Entity<ImsMouse>(entity =>
            {
                entity.HasKey(e => e.ItmMouseId)
                    .HasName("PK__ims_mous__41F587BBDFE18F0A");

                entity.ToTable("ims_mouse");

                entity.Property(e => e.ItmMouseId).HasColumnName("itm_mouse_id");

                entity.Property(e => e.ItaAssetId).HasColumnName("ita_asset_id");

                entity.Property(e => e.ItmCompanyName).HasColumnName("itm_company_name");

                entity.Property(e => e.ItmCreatedBy).HasColumnName("itm_created_by");

                entity.Property(e => e.ItmCreatedByDate)
                    .HasColumnType("datetime")
                    .HasColumnName("itm_created_by_date")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.ItmCreatedByName).HasColumnName("itm_created_by_name");

                entity.Property(e => e.ItmIsDelete).HasColumnName("itm_is_delete");

                entity.Property(e => e.ItmModelNo).HasColumnName("itm_model_no");

                entity.Property(e => e.ItmModifiedBy).HasColumnName("itm_modified_by");

                entity.Property(e => e.ItmModifiedByDate)
                    .HasColumnType("datetime")
                    .HasColumnName("itm_modified_by_date")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.ItmModifiedByName).HasColumnName("itm_modified_by_name");

                entity.HasOne(d => d.ItaAsset)
                    .WithMany(p => p.ImsMouse)
                    .HasForeignKey(d => d.ItaAssetId)
                    .HasConstraintName("FK__ims_mouse__ita_a__2EA5EC27");
            });

            modelBuilder.Entity<ImsPowerCable>(entity =>
            {
                entity.HasKey(e => e.ItpcPowerId)
                    .HasName("PK__ims_powe__C3CAEFF8EC465202");

                entity.ToTable("ims_power_cable");

                entity.Property(e => e.ItpcPowerId).HasColumnName("itpc_power_id");

                entity.Property(e => e.ItaAssetId).HasColumnName("ita_asset_id");

                entity.Property(e => e.ItpcCreatedBy).HasColumnName("itpc_created_by");

                entity.Property(e => e.ItpcCreatedByDate)
                    .HasColumnType("datetime")
                    .HasColumnName("itpc_created_by_date")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.ItpcCreatedByName).HasColumnName("itpc_created_by_name");

                entity.Property(e => e.ItpcIsDelete).HasColumnName("itpc_is_delete");

                entity.Property(e => e.ItpcModifiedBy).HasColumnName("itpc_modified_by");

                entity.Property(e => e.ItpcModifiedByDate)
                    .HasColumnType("datetime")
                    .HasColumnName("itpc_modified_by_date")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.ItpcModifiedByName).HasColumnName("itpc_modified_by_name");

                entity.HasOne(d => d.ItaAsset)
                    .WithMany(p => p.ImsPowerCable)
                    .HasForeignKey(d => d.ItaAssetId)
                    .HasConstraintName("FK__ims_power__ita_a__2057CCD0");
            });

            modelBuilder.Entity<ImsPrinters>(entity =>
            {
                entity.HasKey(e => e.ItpPrinterId)
                    .HasName("PK__ims_prin__11FC8727DB70AF7A");

                entity.ToTable("ims_printers");

                entity.Property(e => e.ItpPrinterId).HasColumnName("itp_printer_id");

                entity.Property(e => e.ItaAssetId).HasColumnName("ita_asset_id");

                entity.Property(e => e.ItpCompanyName).HasColumnName("itp_company_name");

                entity.Property(e => e.ItpCreatedBy).HasColumnName("itp_created_by");

                entity.Property(e => e.ItpCreatedByDate)
                    .HasColumnType("datetime")
                    .HasColumnName("itp_created_by_date")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.ItpCreatedByName).HasColumnName("itp_created_by_name");

                entity.Property(e => e.ItpIsDelete).HasColumnName("itp_is_delete");

                entity.Property(e => e.ItpModelNo).HasColumnName("itp_model_no");

                entity.Property(e => e.ItpModifiedBy).HasColumnName("itp_modified_by");

                entity.Property(e => e.ItpModifiedByDate)
                    .HasColumnType("datetime")
                    .HasColumnName("itp_modified_by_date")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.ItpModifiedByName).HasColumnName("itp_modified_by_name");

                entity.Property(e => e.ItpType).HasColumnName("itp_type");

                entity.HasOne(d => d.ItaAsset)
                    .WithMany(p => p.ImsPrinters)
                    .HasForeignKey(d => d.ItaAssetId)
                    .HasConstraintName("FK__ims_print__ita_a__7EF6D905");
            });

            modelBuilder.Entity<ImsScreens>(entity =>
            {
                entity.HasKey(e => e.ItscScreenId)
                    .HasName("PK__ims_scre__E2BC1118370FC0BB");

                entity.ToTable("ims_screens");

                entity.Property(e => e.ItscScreenId).HasColumnName("itsc_screen_id");

                entity.Property(e => e.ItaAssetId).HasColumnName("ita_asset_id");

                entity.Property(e => e.ItscCompanyName).HasColumnName("itsc_company_name");

                entity.Property(e => e.ItscCreatedBy).HasColumnName("itsc_created_by");

                entity.Property(e => e.ItscCreatedByDate)
                    .HasColumnType("datetime")
                    .HasColumnName("itsc_created_by_date")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.ItscCreatedByName).HasColumnName("itsc_created_by_name");

                entity.Property(e => e.ItscIsDelete).HasColumnName("itsc_is_delete");

                entity.Property(e => e.ItscModelNo).HasColumnName("itsc_model_no");

                entity.Property(e => e.ItscModifiedBy).HasColumnName("itsc_modified_by");

                entity.Property(e => e.ItscModifiedByDate)
                    .HasColumnType("datetime")
                    .HasColumnName("itsc_modified_by_date")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.ItscModifiedByName).HasColumnName("itsc_modified_by_name");

                entity.Property(e => e.ItscSize).HasColumnName("itsc_size");

                entity.HasOne(d => d.ItaAsset)
                    .WithMany(p => p.ImsScreens)
                    .HasForeignKey(d => d.ItaAssetId)
                    .HasConstraintName("FK__ims_scree__ita_a__336AA144");
            });

            modelBuilder.Entity<ImsStationery>(entity =>
            {
                entity.HasKey(e => e.ItsStationeryId)
                    .HasName("PK__ims_stat__D96C26B1B4884F75");

                entity.ToTable("ims_stationery");

                entity.Property(e => e.ItsStationeryId).HasColumnName("its_stationery_id");

                entity.Property(e => e.ItaAssetId).HasColumnName("ita_asset_id");

                entity.Property(e => e.ItsCreatedBy).HasColumnName("its_created_by");

                entity.Property(e => e.ItsCreatedByDate)
                    .HasColumnType("datetime")
                    .HasColumnName("its_created_by_date")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.ItsCreatedByName).HasColumnName("its_created_by_name");

                entity.Property(e => e.ItsIsDelete).HasColumnName("its_is_delete");

                entity.Property(e => e.ItsModifiedBy).HasColumnName("its_modified_by");

                entity.Property(e => e.ItsModifiedByDate)
                    .HasColumnType("datetime")
                    .HasColumnName("its_modified_by_date")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.ItsModifiedByName).HasColumnName("its_modified_by_name");

                entity.Property(e => e.ItsType).HasColumnName("its_type");

                entity.HasOne(d => d.ItaAsset)
                    .WithMany(p => p.ImsStationery)
                    .HasForeignKey(d => d.ItaAssetId)
                    .HasConstraintName("FK__ims_stati__ita_a__1B9317B3");
            });

            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}